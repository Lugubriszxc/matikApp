<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="~/css/tableCss/tableStyle.css" asp-append-version="true"/>
</head>
<body>
    <center><h1>Assign Instructor</h1></center>
    <button type="button" title="Add AssignInstructor" class="btn btn-success" style="color: #ffffff;" data-bs-toggle="modal" data-bs-target="#modalAssignInstructorCreate">
    <i class="fa-solid fa-circle-plus" style="color: #ffffff;"></i> &nbsp Assign an Instructor
    </button>
    <br><br>
    @Html.Partial("PartialAssignInstructor/AssignInstructorTable")
    @Html.Partial("PartialAssignInstructor/AssignInstructorCreate")
</body>
</html>

<script>
    //initialize the variables here as global
    var selectedAssignInstructorId;
    var selectedAssignInstructor;
    var assignInstructorList = {};

    $(document).ready(function(){
    //call the functions by default
    defaultUnselect();
    populateDepartment();
    checkSelectInputs();
    populateSubjects();
    populateInstructors();
    populateInstructorTable();


    //to populate the assign instructor table
    function populateInstructorTable()
    {
        $('#assignInstructorData').DataTable().destroy();
        if(!$.fn.DataTable.isDataTable('#assignInstructorData'))
        {
            $('#assignInstructorData').DataTable({
                responsive: true,
                ajax:
                {
                    url: '../api/adminapi/getAllDetailAssignInstructor',
                    dataSrc: '',
                },
                columns:
                [
                    {data: 'aId'},
                    {data: 'courseName'},
                    {data: 'sectionName'},
                    {data: 'subjectName'},
                    {
                        data: 'instructorId',
                        render : function(data, type, row)
                        {
                            var firstname = row['instructorFname'];
                            var middlename = row['instructorMname'];
                            var lastname = row['instructorLname'];

                            var combined;

                            if(middlename.value === "")
                            {
                                combined = firstname + ' ' + lastname;
                            }
                            else
                            {
                                combined = firstname + ' ' + middlename + ' ' + lastname; 
                            }

                            return combined;
                        }
                    },
                    {data: 'semester'},
                    {data: 'studentCount'},
                    {
                        data: 'aId',
                        render : function (data, type, row)
                        {
                            return btnAssignInstructor(data);
                        }
                    },
                ]
            });
        }
        //get the instructors list 
        getAssignInstructorDetails();
    }

    //to render buttons in action index
    function btnAssignInstructor(aId)
    {
        return "<center><a class='btn btn-success aiUpdate' data-aId=" + aId + "><i class='fa-solid fa-pen-to-square' style='color : #ffffff;'></i></a> | <a class='btn btn-danger aiDelete' data-aId=" + aId + "><i class='fa-solid fa-trash' style='color : #ffffff;'></i></a></center>"
    }

    //get the data of the assign instructor and store it to array
    function getAssignInstructorDetails()
    {
        $.ajax("../api/adminapi/getAllDetailAssignInstructor")
        .done(function(result){
            assignInstructorList = result;
        });
    }

    //this is the checker to guide the user 
    function checkSelectInputs()
    {
        const departmentSel = document.getElementById('departmentSelect');
        const courseSel = document.getElementById('courseSelect');
        const yearLevelSelect = document.getElementById('yearLevelPicker')
        const sectionSelect = document.getElementById('sectionSelect')
        const subjectSelect = document.getElementById('subjectSelect')
        const instructorSelect = document.getElementById('instructorSelect')
        const semesterSelect = document.getElementById('semesterSelect')

        //department condition
        if(departmentSel.selectedIndex !== -1)
        {
            courseSel.disabled = false;
        }
        else
        {
            courseSel.disabled = true;
            yearLevelSelect.disabled = true;
            sectionSelect.disabled = true;
        }

        //course condition
        if(courseSel.selectedIndex !== -1)
        {
            yearLevelSelect.disabled = false;
        }
        else
        {
            yearLevelSelect.disabled = true;
            $("#yearLevelPicker").val([]);
        }

        //year level condition
        if(yearLevelSelect.selectedIndex !== -1)
        {
            sectionSelect.disabled = false;
        }
        else
        {
            sectionSelect.disabled = true;
            $("#sectionSelect").val([]);
        }
    }

    //used to deselect options
    function defaultUnselect()
    {
        $("#yearLevelPicker").val([]);
        $("#semesterSelect").val([]);
    }

    //this is used to populate the department select
    function populateDepartment()
    {
        $.ajax("../api/adminapi/getDepartment")
        .done(function(result){
        var template = document.querySelector("template#departmentOptionTemplate");
        var parent = document.querySelectorAll("#departmentSelect");
        
        //for create modal
        for(i = 0; i < parent.length; i++){
          result.forEach(function (item){
            var cloned = template.content.cloneNode(true);
            cloned.querySelector("option").value = item.departmentId;
            cloned.querySelector("option").innerText= item.departmentName;

            parent[i].append(cloned);
          });
        }

        //to deselect a selected option
        $("select").val([]);
        });
    }

    //this is used to populate the subject select
    function populateSubjects()
    {
        $.ajax("../api/adminapi/getSubjects")
        .done(function(result){
        var template = document.querySelector("template#subjectOptionTemplate");
        var parent = document.querySelectorAll("#subjectSelect");
        
        //for create modal
        for(i = 0; i < parent.length; i++){
          result.forEach(function (item){
            //console.log(item.departmentName);
            var cloned = template.content.cloneNode(true);
            cloned.querySelector("option").value = item.subjectId;
            cloned.querySelector("option").innerText = item.subjectCode + " | " + item.subjectName;

            parent[i].append(cloned);
          });
        }

        //to deselect a selected option
        $("select").val([]);
        });
    }

    //this is used to populate the instructor select
    function populateInstructors()
    {
        $.ajax("../api/adminapi/getInstructors")
        .done(function(result){
        var template = document.querySelector("template#instructorOptionTemplate");
        var parent = document.querySelectorAll("#instructorSelect");
        
        //for create modal
        for(i = 0; i < parent.length; i++){
          result.forEach(function (item){
            //console.log(item.departmentName);
            var cloned = template.content.cloneNode(true);
            cloned.querySelector("option").value = item.instructorId;
            cloned.querySelector("option").innerText = item.instructorLname + ", " + item.instructorFname;

            parent[i].append(cloned);
          });
        }

        //to deselect a selected option
        $("select").val([]);
        });
    }

    //get the select action when selecting an option
    $("#departmentSelect").change(function(){
        //after selection, get the department ID and compare it to existing course list

        // Get the selected index
        const actionSelect = document.getElementById("departmentSelect");
        const selectedIndex = actionSelect.selectedIndex;
        const selectedValue = actionSelect.options[selectedIndex].value;

        populateCourseSelect(selectedValue);
        checkSelectInputs();
    });

    //get the select action when selecting an option
    $("#courseSelect").change(function(){
        checkSelectInputs();
    });

    //to populate the course selection option
    function populateCourseSelect(selectedDepartmentId)
    {
        const actionSelect = document.getElementById("courseSelect");
        // Remove all options from the select element
        while (actionSelect.options.length > 0) {
            actionSelect.remove(0);
        }

        //AJAX get course select dep by department ID
        $.ajax({
            url: "../api/adminapi/getCourseSelectDep",
            type: "POST",
            data:
            {
                departmentId : selectedDepartmentId,
            },
        }).done(function(result){
            //template courses
            var template = document.querySelector("template#courseOptionTemplate");
            var parent = document.querySelectorAll("#courseSelect");
            
            for(i = 0; i < parent.length; i++){
                result.forEach(function (item){
                var cloned = template.content.cloneNode(true);
                cloned.querySelector("option").value = item.courseId;
                cloned.querySelector("option").innerText= item.courseName;

                parent[i].append(cloned);
                });
            }

            seletedCourse = result;
            //to deselect a selected option of course
            $("#courseSelect").val([]);
        })
    }

    //get the select action when selecting an option (year level)
    $("#yearLevelPicker").change(function(){
        //after selection, get the department ID and compare it to existing course list

        // Get the selected index of year level
        const actionSelect = document.getElementById("yearLevelPicker");
        const selectedIndex = actionSelect.selectedIndex;
        const selectedValue = actionSelect.options[selectedIndex].value;

        // Get the selected index of course
        const actionSelectCourse = document.getElementById("courseSelect");
        const selectedIndexCourse = actionSelectCourse.selectedIndex;
        const selectedValueCourse = actionSelectCourse.options[selectedIndexCourse].value;

        populateSectionSelect(selectedValue, selectedValueCourse);
        checkSelectInputs();
    });

    //to populate the class selection option
    function populateSectionSelect(yearLevel, courseId)
    {
        const actionSelect = document.getElementById("sectionSelect");
        // Remove all options from the select element
        while (actionSelect.options.length > 0) {
            actionSelect.remove(0);
        }

        //AJAX get section by year level and department and course
        $.ajax({
            url: "../api/adminapi/getSectionYearrCor",
            type: "POST",
            data:
            {
                yearLevel : yearLevel,
                courseId : courseId,
            },

        }).done(function(result){
            //template section
            var template = document.querySelector("template#sectionOptionTemplate");
            var parent = document.querySelectorAll("#sectionSelect");
            
            for(i = 0; i < parent.length; i++){
                result.forEach(function (item){
                var cloned = template.content.cloneNode(true);
                cloned.querySelector("option").value = item.sectionId;
                cloned.querySelector("option").innerText= item.sectionName;

                parent[i].append(cloned);
                });
            }

            seletedCourse = result;
            //to deselect a selected option of course
            $("#sectionSelect").val([]);
        })
    }


    //assign an instructor [create]
    //createAssignInstructor
    $("#createAssignInstructor").click((e) => {
        var arrData = {};

        //count the number of element inside the form
        var formelements = $("#createAssignInstructorForm .form-group");

        //getting the data from the form
        var formInputs = $("#createAssignInstructorForm").serializeArray();
        formInputs.forEach(function(item){
            arrData[item.name] = item.value;
        });

        let emptyEl = new Boolean(false);
        //alternative of bool
        if(formInputs[7].value === '')
        {
            //if the firstname or lastname are empty then return true or 0
            emptyEl = Boolean(true);
        }
        else{
            //if the firstname and lastname are not empty then return false or 1
            emptyEl = Boolean(false);
        }

        //if all elements are not empty
        if(formInputs.length === formelements.length && emptyEl ===  Boolean(false))
        {

            //Call API to assign an instructor
            $.ajax({
                url: "../api/adminapi/createAssignInstructor",
                type: "POST",
                data:
                {
                    asi : arrData,
                },
            })
            .done(function(){
                $("#createAssignInstructorForm")[0].reset();
                $("#modalAssignInstructorCreate").modal("toggle");
                alertSuccess();
                //populateInstructorTable();
            });
        }
        else   
        {
            alertError("Input the necessary elements!");
        }

    });


    //Sweet alert
    //sweet alert
    //display error alert
    function alertError(message)
    {
        Swal.fire({
            icon: 'error',
            title: 'Error occured',
            text: message,
        })
    }

    //display success action
    function alertSuccess()
    {
        Swal.fire({
            icon: 'success',
            title: 'Your work has been saved', 
            showConfirmButton: false,
            timer: 1500
        })
    }
    
    }); //end of document.ready function
</script>