<h4>Index Dean</h4>
<button type="button" title="Create Course" class="btn btn-success" style="color: #ffffff;" data-bs-toggle="modal" data-bs-target="#modalDeanCreate">
  <i class="fa-solid fa-circle-plus" style="color: #ffffff;"></i>
</button>

@Html.Partial("PartialDean/DeanTable")
@Html.Partial("PartialDean/DeanCreate")

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    $(document).ready(function(){
    
    //call for the functions by default
    populateDepartment();
    populateDeanTable();
    testingDataFetch();

    //to populate the department option 
    function populateDepartment()
    {
        $.ajax("../api/adminapi/getDepartment")
        .done(function(result){
        //console.log(result);
        var template = document.querySelector("template#departmentOptionTemplate");
        var parent = document.querySelectorAll("#departmentSelect");
        
        for(i = 0; i < parent.length; i++){
          result.forEach(function (item){
            var cloned = template.content.cloneNode(true);
            cloned.querySelector("option").value = item.departmentId;
            cloned.querySelector("option").innerText= item.departmentName;

            parent[i].prepend(cloned);
          });
        }
        //to deselect a selected option
        $("select").val([]);
        });
    }

    //to populate the table
    function populateDeanTable()
    {
        $('#deanData').DataTable().destroy();
        if(!$.fn.DataTable.isDataTable('#deanData'))
        {
            $('#deanData').DataTable({
                ajax:
                {
                    url: '../api/adminapi/getDeanDep',
                    dataSrc: ''
                },
                columns:
                [
                    {data: 'deanId'},
                    {
                        data: 'deanId',
                        render : function(data, type, row)
                        {
                            var firstname = row['deanFname'];
                            var middlename = row['deanMname'];
                            var lastname = row['deanLname'];

                            var combined;

                            if(middlename.value === "")
                            {
                                combined = firstname + ' ' + lastname;
                            }
                            else
                            {
                                combined = firstname + ' ' + middlename + ' ' + lastname; 
                            }

                            return combined;
                        }
                    },
                    {data: 'departmentName'},
                    {
                        data: 'deanId',
                        render : function (data, type, row)
                        {
                            return btnDean(data);
                        }
                    },
                ]
            });
        }
    }

    //to render buttons in action index
    function btnDean(deanId)
    {
        return "<center><a class='btn btn-success deanUpdate' data-deanId=" + deanId + "><i class='fa-solid fa-pen-to-square' style='color : #ffffff;'></i></a> | <a class='btn btn-danger deanDelete' data-deanId=" + deanId + "><i class='fa-solid fa-trash' style='color : #ffffff;'></i></a></center>"
    }

    //this is just to test the fetching of data from the API
    function testingDataFetch()
    {
        //the dean department class
        $.ajax("../api/adminapi/getDeanDep")
        .done(function(result){
            console.log(result);
        });
    }

    //this is to create a dean and save it to the database
    $("#createDean").click((e) => {
        var arrData = {};

        //count the number of element inside the form
        var formelements = $("#createDeanForm .form-group");

        //getting the data from the form
        var formInputs = $("#createDeanForm").serializeArray();
        formInputs.forEach(function(item){
            arrData[item.name] = item.value;
        });

        console.log(arrData);

        let emptyEl = new Boolean(false);
        //alternative of bool
        if(formInputs[0].value === '' || formInputs[2].value === '')
        {
            //if the firstname or lastname are empty then return true or 0
            emptyEl = Boolean(true);
        }
        else{
            //if the firstname and lastname are not empty then return false or 1
            emptyEl = Boolean(false);
        }

        if(formInputs.length === formelements.length && emptyEl ===  Boolean(false))
        {
            //if all elements are not empty

            let isDeanRegistered = new Boolean(false);
            //checking if the department has already a dean
            $.ajax({
                url: "../api/adminapi/checkDeanDep",
                type: "POST",
                data:
                {
                    depID : formInputs[3].value,
                },
            })
            .done(function(result){
                isDeanRegistered = Boolean(result);
            });

            //if the department has no dean
            if(isDeanRegistered === Boolean(false))
            {   
                //Call API to add Dean
                $.ajax({
                    url: "../api/adminapi/createDean",
                    type: "POST",
                    data:
                    {
                        den : arrData,
                    },
                })
                .done(function(){
                    $("#createDeanForm")[0].reset();
                    $("#modalDeanCreate").modal("toggle");
                    alertSuccess();
                    populateDeanTable();
                });
            }
            else
            {
                alertError("There is already a designated dean in this department.");
            }
        }
        else   
        {
            alertError("Input the necessary elements!");
        }

    });

    //display error alert
    function alertError(message)
    {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: message,
        })
    }

    //display success action
    function alertSuccess()
    {
        Swal.fire({
            icon: 'success',
            title: 'Your work has been saved', 
            showConfirmButton: false,
            timer: 1500
        })
    }


    //don't touch this
    });
</script>