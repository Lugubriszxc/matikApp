<center><h1>Dean</h1></center>
<button type="button" title="Create Dean" class="btn btn-success" style="color: #ffffff;" data-bs-toggle="modal" data-bs-target="#modalDeanCreate">
  <i class="fa-solid fa-circle-plus" style="color: #ffffff;"></i> &nbsp Create Dean
</button>

<br><br>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="~/css/tableCss/tableStyle.css" asp-append-version="true"/>
</head>
<body>
    @Html.Partial("PartialDean/DeanTable")
    @Html.Partial("PartialDean/DeanCreate")
    @Html.Partial("PartialDean/DeanUpdate")
</body>
</html>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>

    //initialize the variables here as global
    var selectedDeanId;
    var selectedDean;
    var deanList = {};


    $(document).ready(function(){
    //call for the functions by default
    populateDepartment();
    populateDeanTable();
    testingDataFetch();

    //to populate the department option 
    function populateDepartment()
    {
        $.ajax("../api/adminapi/getDepartment")
        .done(function(result){
        //console.log(result);
        var template = document.querySelector("template#departmentOptionTemplate");
        var parent = document.querySelectorAll("#departmentSelect");
        
        for(i = 0; i < parent.length; i++){
          result.forEach(function (item){
            var cloned = template.content.cloneNode(true);
            cloned.querySelector("option").value = item.departmentId;
            cloned.querySelector("option").innerText= item.departmentName;

            parent[i].prepend(cloned);
          });
        }
        //to deselect a selected option
        $("select").val([]);
        });
    }

    //to populate the table
    function populateDeanTable()
    {
        $('#deanData').DataTable().destroy();
        if(!$.fn.DataTable.isDataTable('#deanData'))
        {
            $('#deanData').DataTable({
                responsive: true,
                ajax:
                {
                    url: '../api/adminapi/getDeanDep',
                    dataSrc: ''
                },
                columns:
                [
                    {data: 'deanId'},
                    {
                        data: 'deanId',
                        render : function(data, type, row)
                        {
                            var firstname = row['deanFname'];
                            var middlename = row['deanMname'];
                            var lastname = row['deanLname'];

                            var combined;

                            if(middlename.value === "")
                            {
                                combined = firstname + ' ' + lastname;
                            }
                            else
                            {
                                combined = firstname + ' ' + middlename + ' ' + lastname; 
                            }

                            return combined;
                        }
                    },
                    {data: 'departmentName'},
                    {
                        data: 'deanId',
                        render : function (data, type, row)
                        {
                            return btnDean(data);
                        }
                    },
                ]
            });
        }
        //get the deans list 
        getDeans();
    }

    //to render buttons in action index
    function btnDean(deanId)
    {
        return "<center><a class='btn btn-success deanUpdate' data-deanId=" + deanId + "><i class='fa-solid fa-pen-to-square' style='color : #ffffff;'></i></a> | <a class='btn btn-danger deanDelete' data-deanId=" + deanId + "><i class='fa-solid fa-trash' style='color : #ffffff;'></i></a></center>"
    }

    //this is just to test the fetching of data from the API
    function testingDataFetch()
    {
        //the dean department class
        $.ajax("../api/adminapi/getDeanDep")
        .done(function(result){
            console.log(result);
        });
    }

    //this is to get the data of deans from the API and store it to array
    function getDeans()
    {
        $.ajax("../api/adminapi/getDeans")
        .done(function(result){
            deanList = result;
        });
    }

    //this is to create a dean and save it to the database
    $("#createDean").click((e) => {
        var arrData = {};

        //count the number of element inside the form
        var formelements = $("#createDeanForm .form-group");

        //getting the data from the form
        var formInputs = $("#createDeanForm").serializeArray();
        formInputs.forEach(function(item){
            arrData[item.name] = item.value;
        });

        let emptyEl = new Boolean(false);
        //alternative of bool
        if(formInputs[0].value === '' || formInputs[2].value === '')
        {
            //if the firstname or lastname are empty then return true or 0
            emptyEl = Boolean(true);
        }
        else{
            //if the firstname and lastname are not empty then return false or 1
            emptyEl = Boolean(false);
        }

        //if all elements are not empty
        if(formInputs.length === formelements.length && emptyEl ===  Boolean(false))
        {
            let isDeanRegistered = new Boolean(false);
            //checking if the department has already a dean
            $.ajax({
                url: "../api/adminapi/checkDeanDep",
                type: "POST",
                data:
                {
                    depID : formInputs[3].value,
                },
            })
            .done(function(result){
                isDeanRegistered = Boolean(result);

                //if the department has no dean
                if(isDeanRegistered === Boolean(false))
                {   
                    //Call API to add Dean
                    $.ajax({
                        url: "../api/adminapi/createDean",
                        type: "POST",
                        data:
                        {
                            den : arrData,
                        },
                    })
                    .done(function(){
                        $("#createDeanForm")[0].reset();
                        $("#modalDeanCreate").modal("toggle");
                        alertSuccess();
                        populateDeanTable();
                    });
                }
                else
                {
                    alertError("There is already a designated dean in this department.");
                }
            });
        }
        else   
        {
            alertError("Input the necessary elements!");
        }

    });

    //when clicking the delete button
    $("tbody").delegate(".deanDelete", "click", function(e){
        var i = e.target.closest("a").getAttribute("data-deanId");
        if(i != null)
        {
            //Insert code here for delete
            selectedDeanId = i;
            alertDeleteConfirmation(selectedDeanId);
        }
    });

    //after confirming delete, call this
    function deleteDean(selectedDeanId)
    {
        //AJAX delete dean
        $.ajax({
            url: "../api/adminapi/deleteDean",
            type: "POST",
            data:
            {
                deanId : selectedDeanId,
            },
        }).done(function(){
            alertSuccess();
            populateDeanTable();
        })
    }

    //when clicking the update button
    $("tbody").delegate(".deanUpdate", "click", function(e){
        var i = e.target.closest("a").getAttribute("data-deanId");
        if(i != null)
        {
            $("#createDeanForm")[0].reset();
            $("#modalDeanUpdate").modal("toggle");

            selectedDeanId = i;
            selectedDean = deanList.find(element => element.deanId == i);

            oFormObject = document.forms["updateDeanForm"];
            //console.log(oFormObject);
            initForm(oFormObject, selectedDean);
        }
    });

    //to populate the selected element to the form
    function initForm(form, data){
        Object.getOwnPropertyNames(data).forEach(function(item){
        var currentElem = form.elements[item.charAt(0).toUpperCase() + item.slice(1)];
        //console.log(currentElem);

        if( currentElem == null ){return;}

        if(currentElem.tagName == "SELECT"){
            var selectChildren = Array.from(currentElem.children);
            var matchedOpt = selectChildren.find(opt => opt.value == selectedDean.departmentId);
        if(matchedOpt){
            matchedOpt.selected = true;
        }
        }else{
            form.elements[item.charAt(0).toUpperCase() + item.slice(1)].setAttribute("value",data[item]); 
        }
        });
    }

    function proceedUpdate()
    {
        var arrData = {};

        //count the number of elements inside  the form
        var formelements = $("#updateDeanForm .form-group");

        //getting the data from the form
        var formInputs = $("#updateDeanForm").serializeArray();
        formInputs.forEach(function(item){
            arrData[item.name] = item.value;
        });

        arrData.deanId = selectedDeanId;

        let emptyEl = new Boolean(false);
        //alternative of bool
        if(formInputs[0].value === '' || formInputs[2].value === '')
        {
            //if the firstname or lastname are empty then return true or 0
            emptyEl = Boolean(true);
        }
        else{
            //if the firstname and lastname are not empty then return false or 1
            emptyEl = Boolean(false);
        }

        //if all elements are not empty
        if(formInputs.length === formelements.length && emptyEl ===  Boolean(false))
        {
            let isDeanRegistered = new Boolean(false);
            //checking if the department has already a dean
            $.ajax({
                url: "../api/adminapi/checkDeanDep",
                type: "POST",
                data:
                {
                    depID : formInputs[3].value,
                },
            })
            .done(function(result){
                isDeanRegistered = Boolean(result);

                //if the department has no dean
                if(isDeanRegistered === Boolean(false))
                {   
                    //Call API to add Dean
                    $.ajax({
                        url: "../api/adminapi/updateDean",
                        type: "POST",
                        data:
                        {
                            den : arrData,
                        },
                    })
                    .done(function(){
                        $("#updateDeanForm")[0].reset();
                        $("#modalDeanUpdate").modal("toggle");
                        alertSuccess();
                        populateDeanTable();
                    });
                }
                else
                {
                    alertError("There is already a designated dean in this department.");
                }
            });
        }
        else   
        {
            alertError("Input the necessary elements!");
        }
    }

    //after clicking update
    $("#updateDean").click(function(){
        alertSaveChanges();
    });

    //display error alert
    function alertError(message)
    {
        Swal.fire({
            icon: 'error',
            title: 'Error occured',
            text: message,
        })
    }

    //display success action
    function alertSuccess()
    {
        Swal.fire({
            icon: 'success',
            title: 'Your work has been saved', 
            showConfirmButton: false,
            timer: 1500
        })
    }

    //display delete confirmation
    function alertDeleteConfirmation(selectedDeanId)
    {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes!'
        }).then((result) => {
            if(result.isConfirmed){
                deleteDean(selectedDeanId);
            }
        })
    }

    //display update confirmation
    function alertSaveChanges()
    {
        Swal.fire({
            title: 'Do you want to save the changes?',
            showCancelButton: true,
            confirmButtonText: 'Save',
        }).then((result) => {
            if(result.isConfirmed){
                proceedUpdate();
            }
        })
    }

    //don't touch this
    });
</script>