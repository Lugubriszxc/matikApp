<center><h1>Student Profile</h1></center>

<button type="button" title="Create Student" id="createStudentbtn" class="btn btn-success" style="color: #ffffff;" data-bs-toggle="modal" data-bs-target="#modalStudentCreate">
  <i class="fa-solid fa-circle-plus" style="color: #ffffff;"></i> &nbsp Create Student
</button>

<br><br>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="~/css/tableCss/tableStyle.css" asp-append-version="true"/>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <!--Import the partials here-->
    @Html.Partial("PartialStudent/StudentTable")
    @Html.Partial("PartialStudent/StudentCreate")
    @Html.Partial("PartialStudent/StudentUpdate")
    @Html.Partial("PartialStudent/StudentEnrollTable")
    @Html.Partial("PartialStudent/StudentEnrollCreate")
</body>
</html>

<script>
    var selectedStudentId;
    var selectedStudent;
    var studentList = {};
    
    var selectedCourse;
    var selectedEnrollmentId;

    var selectedAcad;
    var selectedSem;
    var selectedYear;

    $(document).ready(function(){

    var storedUserAuth = sessionStorage.getItem('userauth');
    var userAuth = JSON.parse(storedUserAuth);

    if(userAuth === null)
    {
        window.location.href = "/Authorization/Signin";
    }
    else if(userAuth.userType !== 'admin')
    {
        if(userAuth.userType === 'instructor')
        {
            window.location.href = "/PageInstructor/PageInstructorIndex";
        }
        else if(userAuth.userType === 'student')
        {
            window.location.href = "/PageStudent/PageStudentIndex";
        }
    }

    populateStudentTable();
    populateDepartment();
    populateAcademicYear();
    checkSelectInputs();

    //to populate the student table
    function populateStudentTable()
    {
        $('#studentData').DataTable().destroy();
        if(!$.fn.DataTable.isDataTable('#studentData'))
        {
            $('#studentData').DataTable({
                responsive: true,
                ajax:
                {
                    url: '../api/adminapi/getStudents',
                    dataSrc: '',
                },
                columns:
                [
                    {data: 'studentId'},
                    {data: 'schoolId'},
                    {
                        data: 'studentId',
                        render : function(data, type, row)
                        {
                            var firstname = row['studentFname'];
                            var middlename = row['studentMname'];
                            var lastname = row['studentLname'];

                            var combined;

                            if(middlename.value === "")
                            {
                                combined = firstname + ' ' + lastname;
                            }
                            else
                            {
                                combined = firstname + ' ' + middlename + ' ' + lastname; 
                            }

                            return combined;
                        }
                    },
                    {
                        data: 'studentId',
                        render : function (data, type, row)
                        {
                            return btnStudent(data);
                        }
                    },
                ]
            });
        }
        getStudent();
    }

    //to render buttons in action index
    function btnStudent(studentId)
    {
        return "<center> <a class='btn btn-primary studentEnroll' data-studentId=" + studentId + " title='Enroll student'><i class='fa-solid fa-graduation-cap'></i></a> | <a class='btn btn-success studentUpdate' data-studentId=" + studentId + "><i class='fa-solid fa-pen-to-square' style='color : #ffffff;'></i></a> | <a class='btn btn-danger studentDelete' data-studentId=" + studentId + "><i class='fa-solid fa-trash' style='color : #ffffff;'></i></a></center>"
    }

    //to get the list of student list
    function getStudent()
    {
        $.ajax("../api/adminapi/getStudents")
        .done(function(result){
            studentList = result;
        });
    }

    //this is to create a student and save it to the database
    $("#createStudent").click((e) => {
        var arrData = {};

        //count the number of element inside the form
        var formelements = $("#createStudentForm .form-group");

        //getting the data from the form
        var formInputs = $("#createStudentForm").serializeArray();
        formInputs.forEach(function(item){
            arrData[item.name] = item.value;
        });

        let emptyEl = new Boolean(false);
        //alternative of bool
        if(formInputs[0].value === '' || formInputs[2].value === '' || formInputs[3].value === '' || formInputs[4].value === '' || formInputs[5].value === '')
        {
            //if the firstname or lastname are empty then return true or 0
            emptyEl = Boolean(true);
        }
        else{
            //if the firstname and lastname are not empty then return false or 1
            emptyEl = Boolean(false);
        }

        //if all elements are not empty
        if(formInputs.length === formelements.length && emptyEl ===  Boolean(false))
        {

            $.ajax({
                url: "../api/adminapi/CheckEmailStudent",
                type: "POST",
                data:
                {
                    stud : arrData,
                },
            })
            .done(function(result){

                //console.log(result);
                if(result === undefined || result === "" || result === null)
                {
                    //Call API to add Student
                    $.ajax({
                        url: "../api/adminapi/createStudent",
                        type: "POST",
                        data:
                        {
                            stud : arrData,
                        },
                    })
                    .done(function(result){

                        //console.log(result);
                        if(result === undefined || result === "" || result === null)
                        {
                            $("#createStudentForm")[0].reset();
                            $("#modalStudentCreate").modal("toggle");
                            alertSuccess();
                            populateStudentTable();
                        }
                        else
                        {
                            alertError("This student is already created");
                        }
                    });
                }
                else
                {
                    alertError("Email is already in use.");
                }
            });

        }
        else   
        {
            alertError("Input the necessary elements!");
        }

    });

    $("#createEnrollStudent").click((e) => {
        var arrData = {};

        //count the number of element inside the form
        var formelements = $("#createEnrollStudentForm .form-group");

        //getting the data from the form
        var formInputs = $("#createEnrollStudentForm").serializeArray();
        formInputs.forEach(function(item){
            arrData[item.name] = item.value;
        });

        arrData.StudentId = selectedStudentId;

        console.log(arrData);

        @* console.log("Form inputs  : " + formInputs.length);
        console.log("Form elements  : " + formelements.length); *@

        //if all elements are not empty
        if(formInputs.length === formelements.length)
        {
            //check the data if there is an identical data
            $.ajax({
                url: "../api/adminapi/checkStudentEnrollment",
                type: "POST",
                data:
                {
                    asi : arrData,
                },
            })
            .done(function(result){

                //false means there is no existing data in the enrollment
                console.log(result);
                if(result === undefined)
                {
                    result = null;
                }

                if(result === null)
                {
                    //proceed to enroll the student
                    console.log("Yes, it's empty");
                    $.ajax({
                        url: "../api/adminapi/enrollStudent",
                        type: "POST",
                        data:
                        {
                            asi : arrData,
                        },
                    })
                    .done(function(result){
                        $("#modalEnrollStudentCreate").modal("toggle");
                        alertSuccess();
                        populateEnrollStudentTable();
                    });
                }
                else
                {
                    alertError("The student is already enrolled for the selected academic year and semester");
                }
            });
        }
        else
        {   
            alertError("Input all of the necessary elements first.");
        }
    });


    //when clicking the update button
    $("tbody").delegate(".studentUpdate", "click", function(e){
        var i = e.target.closest("a").getAttribute("data-studentId");
        if(i != null)
        {
            $("#createStudentForm")[0].reset();
            $("#modalStudentUpdate").modal("toggle");

            selectedStudentId = i;
            selectedStudent = studentList.find(element => element.studentId == i);

            oFormObject = document.forms["updateStudentForm"];
            initForm(oFormObject, selectedStudent);
        }
    });


    //studentEnroll
    // This is the action button when clicking the enroll student
    $("tbody").delegate(".studentEnroll", "click", function(e){
        var i = e.target.closest("a").getAttribute("data-studentId");
        if(i != null)
        {
            selectedStudentId = i;
            selectedStudent = studentList.find(element => element.studentId == i);

            $("#modalEnrollStudentTable").modal("toggle");

            //console.log(selectedStudentId);
            populateEnrollStudentTable();
        }
    });

    function populateEnrollStudentTable()
    {
        $('#enrollStudentTable').DataTable().destroy();
        if(!$.fn.DataTable.isDataTable('#enrollStudentTable'))
        {
            $('#enrollStudentTable').DataTable({
                responsive: true,
                ajax:
                {
                    url: '../api/adminapi/getStudentEnrollment',
                    data:
                    {
                        studentID : selectedStudentId,
                    },
                    dataSrc: '',
                },
                columns:
                [
                    {data: 'enrollmentId'},
                    {data: 'departmentName'},
                    {data: 'courseName'},
                    {data: 'yearLevel'},
                    {data: 'sectionName'},
                    {data: 'acadYearName'},
                    {data: 'semester'},
                    {
                        data: 'enrollmentId',
                        render : function (data, type, row)
                        {
                            return btnEnroll(data);
                        }
                    },
                ]
            });
        }
    }

    function btnEnroll(enrollId)
    {
        return "<center><a class='btn btn-danger enrollStudentDelete' data-enrollId=" + enrollId + "><i class='fa-solid fa-trash' style='color : #ffffff;'></i></a></center>"
    }

    //when clicking the delete button
    $("tbody").delegate(".enrollStudentDelete", "click", function(e){
        var i = e.target.closest("a").getAttribute("data-enrollId");
        if(i != null)
        {
            //Insert code here for delete
            selectedEnrollmentId = i;
            //console.log(selectedEnrollmentId);

            alertDeleteEnrollmentConfirm(selectedEnrollmentId);
        }
    });

    function deleteEnrollmentStudent(selectedEnrollmentId)
    {
        //AJAX delete enrollment student
        $.ajax({
            url: "../api/adminapi/deleteEnrollmentStudent",
            type: "POST",
            data:
            {
                enrollmentId : selectedEnrollmentId,
            },
        }).done(function(){
            alertSuccess();
            populateEnrollStudentTable();
        })
    }

    function populateDepartment()
    {
        $.ajax("../api/adminapi/getDepartment")
        .done(function(result){
            var template = document.querySelector("template#departmentOptionTemplate");
            var parent = document.querySelectorAll("#departmentSelect");
    
            //for create modal
            for(i = 0; i < parent.length; i++){
            result.forEach(function (item){
                var cloned = template.content.cloneNode(true);
                cloned.querySelector("option").value = item.departmentId;
                cloned.querySelector("option").innerText= item.departmentName;

                parent[i].append(cloned);
            });
            }
            //to deselect a selected option
            $("select").val([]);
        });
    }

    

    function populateAcademicYear()
    {
        $.ajax("../api/adminapi/getAcademicYear")
        .done(function(result){
        var template = document.querySelector("template#academicYearTemplate");
        var parent = document.querySelectorAll("#acadYearSelect");
        
        for(i = 0; i < parent.length; i++){
          result.forEach(function (item){
            var cloned = template.content.cloneNode(true);
            cloned.querySelector("option").value = item.acadYearId;
            cloned.querySelector("option").innerText = item.acadYearName;

            parent[i].prepend(cloned);
          });
        }

        //to deselect a selected option
        $("select").val([]);
        });
    }

    //get the select action when selecting an option
    $("#departmentSelect").change(function(){
        const actionSelect = document.getElementById("departmentSelect");
        const selectedIndex = actionSelect.selectedIndex;
        const selectedValue = actionSelect.options[selectedIndex].value;

        populateCourseSelect(selectedValue);
        checkSelectInputs();
    });

    $("#courseSelect").change(function(){
        $("#yearLevelPicker").val([]);

        const actionSelect = document.getElementById("courseSelect");
        const selectedIndex = actionSelect.selectedIndex;
        selectedCourse = actionSelect.options[selectedIndex].value;

        //console.log(selectedCourse);
        checkSelectInputs();
    });

    $("#yearLevelPicker").change(function(){
        const actionSelect = document.getElementById("yearLevelPicker");
        const selectedIndex = actionSelect.selectedIndex;
        selectedYear = actionSelect.options[selectedIndex].value;

        if(selectedAcad == undefined)
            selectedAcad = null;

        if(selectedSem == undefined)
            selectedSem = null;

        if(selectedAcad != null && selectedSem != null && selectedYear != null)
        {
            populateSectionSelect(selectedCourse, selectedYear, selectedAcad, selectedSem);
        }

        checkSelectInputs();
    });

    $("#acadYearSelect").change(function(){
        const actionSelect = document.getElementById("acadYearSelect");
        const selectedIndex = actionSelect.selectedIndex;
        selectedAcad = actionSelect.options[selectedIndex].value;

        if(selectedSem == undefined)
            selectedSem = null;

        if(selectedYear == undefined)
            selectedYear = null;
        
        if(selectedAcad != null && selectedSem != null && selectedYear != null)
        {
            populateSectionSelect(selectedCourse, selectedYear, selectedAcad, selectedSem);
        }

        checkSelectInputs();
    });

    $("#semesterSelect").change(function(){
        const actionSelect = document.getElementById("semesterSelect");
        const selectedIndex = actionSelect.selectedIndex;
        selectedSem = actionSelect.options[selectedIndex].value;

        if(selectedAcad == undefined)
            selectedAcad = null;

        if(selectedYear == undefined)
            selectedYear = null;

        if(selectedAcad != null && selectedSem != null && selectedYear != null)
        {
            populateSectionSelect(selectedCourse, selectedYear, selectedAcad, selectedSem);
        }

        checkSelectInputs();
    });


    function populateCourseSelect(selectedDepartmentId)
    {
         $("#courseSelect").val([]);
            const actionSelect = document.getElementById("courseSelect");

            // Remove all options from the select element
            while (actionSelect.options.length > 0) {
                actionSelect.remove(0);
            }

            //AJAX get course select dep by department ID
            $.ajax({
                url: "../api/adminapi/getCourseSelectDep",
                type: "POST",
                data:
                {
                    departmentId : selectedDepartmentId,
                },
            }).done(function(result){
                //template courses
                var template = document.querySelector("template#courseOptionTemplate");
                var parent = document.querySelectorAll("#courseSelect");
                
                for(i = 0; i < parent.length; i++){
                    result.forEach(function (item){
                    var cloned = template.content.cloneNode(true);
                    cloned.querySelector("option").value = item.courseId;
                    cloned.querySelector("option").innerText= item.courseName;

                    parent[i].append(cloned);
                    });
                }

                seletedCourse = result;

                //to deselect a selected option of course
                $("#courseSelect").val([]);
            })
    }

    function populateSectionSelect(selectedCourseId, selectedYear, selectedAcad, selectedSem)
    {
        $("#sectionSelect").val([]);
            const actionSelect = document.getElementById("sectionSelect");

            // Remove all options from the select element
            while (actionSelect.options.length > 0) {
                actionSelect.remove(0);
            }

            //AJAX get course select dep by department ID
            $.ajax({
                url: "../api/adminapi/getSectionSelect",
                type: "POST",
                data:
                {
                    courseId : selectedCourseId,
                    yearLevel : selectedYear,
                    acadVal : selectedAcad,
                    semVal : selectedSem,
                },

            }).done(function(result){
                //template sections
                var template = document.querySelector("template#sectionOptionTemplate");
                var parent = document.querySelectorAll("#sectionSelect");
                
                for(i = 0; i < parent.length; i++){
                    result.forEach(function (item){
                    var cloned = template.content.cloneNode(true);
                    cloned.querySelector("option").value = item.sectionId;
                    cloned.querySelector("option").innerText= item.sectionName;

                    parent[i].append(cloned);
                    });
                }

                //selectedSection = result;

                //to deselect a selected option of course
                $("#sectionSelect").val([]);
            })
    }

    function checkSelectInputs()
    {
        //modal create
        const departmentSel = document.getElementById('departmentSelect');
        const courseSel = document.getElementById('courseSelect');
        const yearLevelSelect = document.getElementById('yearLevelPicker')
        const subjectSelect = document.getElementById('subjectSelect')
        const sectionSelect = document.getElementById('sectionSelect')
        const acadSelect = document.getElementById('acadYearSelect')
        const semesterSelect = document.getElementById('semesterSelect')

        const subjectSelectUpdate = document.getElementById('subjectSelectUpdate')
        //department condition
        if(departmentSel.selectedIndex !== -1)
        {
            courseSel.disabled = false;
        }
        else
        {
            courseSel.disabled = true;
            yearLevelSelect.disabled = true;
            @* sectionSelect.disabled = true; *@
        }

        //course condition
        if(courseSel.selectedIndex !== -1)
        {
            yearLevelSelect.disabled = false;
        }
        else
        {
            yearLevelSelect.disabled = true;
            $("#yearLevelPicker").val([]);
        }

        //section select
        if(yearLevelSelect.selectedIndex !== -1 && acadSelect.selectedIndex !== -1 && semesterSelect.selectedIndex !== -1)
        {
            sectionSelect.disabled = false;
        }
        else
        {
            sectionSelect.disabled = true;
            $("#sectionSelect").val([]);
        }
    }


    //to populate the selected element to the form
    function initForm(form, data){
        Object.getOwnPropertyNames(data).forEach(function(item){
        var currentElem = form.elements[item.charAt(0).toUpperCase() + item.slice(1)];
        //console.log(currentElem);
        //console.log(currentElem);

        if( currentElem == null ){return;}

        if(currentElem.tagName == "SELECT"){
            var selectChildren = Array.from(currentElem.children);
            var matchedOpt = selectChildren.find(opt => opt.value == selectedStudent.departmentId);
        if(matchedOpt){
            matchedOpt.selected = true;
        }
        }else{
            form.elements[item.charAt(0).toUpperCase() + item.slice(1)].setAttribute("value",data[item]); 
        }
        });
    }

    //after clicking update
    $("#updateStudent").click(function(){
        alertSaveChanges();
    });


    function proceedUpdate()
    {
        var arrData = {};

        //count the number of elements inside  the form
        var formelements = $("#updateStudentForm .form-group");

        //getting the data from the form
        var formInputs = $("#updateStudentForm").serializeArray();
        formInputs.forEach(function(item){
            arrData[item.name] = item.value;
        });

        arrData.studentId = selectedStudentId;

        let emptyEl = new Boolean(false);
        //alternative of bool
        if(formInputs[0].value === '' || formInputs[2].value === '' || formInputs[3].value === '' || formInputs[4].value === '' || formInputs[5].value === '')
        {
            //if the firstname or lastname are empty then return true or 0
            emptyEl = Boolean(true);
        }
        else{
            //if the firstname and lastname are not empty then return false or 1
            emptyEl = Boolean(false);
        }

        //if all elements are not empty
        if(formInputs.length === formelements.length && emptyEl ===  Boolean(false))
        {

            $.ajax({
                url: "../api/adminapi/checkEmailStudent",
                type: "POST",
                data:
                {
                    stud : arrData,
                },
            })
            .done(function(result){
                if(result === undefined || result === "" || result === null)
                {
                    //Call API to add Student
                    $.ajax({
                        url: "../api/adminapi/updateStudent",
                        type: "POST",
                        data:
                        {
                            stud : arrData,
                        },
                    })
                    .done(function(result){
                        if(result === undefined || result === "" || result === null)
                        {
                            $("#updateStudentForm")[0].reset();
                            $("#modalStudentUpdate").modal("toggle");
                            alertSuccess();
                            populateStudentTable();
                        }
                        else
                        {
                            alertError("This student is already created");
                        }
                    });
                }
                else
                {
                    alertError("Email is already in use");
                }
            });
        }
        else   
        {
            alertError("Input the necessary elements!");
        }
    }

    //when clicking the delete button
    $("tbody").delegate(".studentDelete", "click", function(e){
        var i = e.target.closest("a").getAttribute("data-studentId");
        if(i != null)
        {
            //Insert code here for delete
            selectedStudentId = i;
            alertDeleteConfirmation(selectedStudentId);
        }
    });

    //after confirming delete, call this function
    function deleteStudent(selectedStudentId)
    {
        //AJAX delete student
        $.ajax({
            url: "../api/adminapi/deleteStudent",
            type: "POST",
            data:
            {
                studentId : selectedStudentId,
            },
        }).done(function(){
            alertSuccess();
            populateStudentTable();
        })
    }


    //upon closing the modal create
    $("#modalStudentCreateClose").click(function(){
        defaultClear();
    });

    $("#createStudentbtn").click((e) => {
        defaultClear();
    });

    function defaultClear()
    {
        $("#createStudentForm")[0].reset();
        $("#updateStudentForm")[0].reset();
        $("select").val([]);
    }


    //Sweet alert zone 
    //display success action
    function alertSuccess()
    {
        Swal.fire({
            icon: 'success',
            title: 'Your work has been saved', 
            showConfirmButton: false,
            timer: 1500
        })
    }

     //display error alert
    function alertError(message)
    {
        Swal.fire({
            icon: 'error',
            title: 'Error occured',
            text: message,
        })
    }

     //display update confirmation
    function alertSaveChanges()
    {
        Swal.fire({
            title: 'Do you want to save the changes?',
            showCancelButton: true,
            confirmButtonText: 'Save',
        }).then((result) => {
            if(result.isConfirmed){
                proceedUpdate();
            }
        })
    }

    //display delete confirmation
    function alertDeleteConfirmation(selectedStudentId)
    {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes!'
        }).then((result) => {
            if(result.isConfirmed){
                deleteStudent(selectedStudentId);
            }
        })
    }

    function alertDeleteEnrollmentConfirm(selectedEnrollmentId)
    {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes!'
        }).then((result) => {
            if(result.isConfirmed){
                deleteEnrollmentStudent(selectedEnrollmentId);
            }
        })
    }


    }); // end of document. ready
</script>