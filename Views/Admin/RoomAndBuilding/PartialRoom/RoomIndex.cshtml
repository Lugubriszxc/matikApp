<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="~/css/tableCss/tableStyle.css" asp-append-version="true"/>
</head>
<body>
    <center><h1>Room Index</h1></center>
    <button type="button" title="Create Room" class="btn btn-success" style="color: #ffffff;" data-bs-toggle="modal" data-bs-target="#modalRoomCreate">
    <i class="fa-solid fa-circle-plus" style="color: #ffffff;"></i> &nbsp Create Room
    </button>

    <br><br>
    @Html.Partial("RoomAndBuilding/PartialRoom/RoomTable")
    @Html.Partial("RoomAndBuilding/PartialRoom/RoomCreate")
    @Html.Partial("RoomAndBuilding/PartialRoom/RoomUpdate")
</body>
</html>

<script>
    //initialize the variables here as global
    var selectedRoomId;
    var selectedRoom;
    var roomList = {};

    $(document).ready(function(){
    //call for the functions by default
    populateBuilding();
    populateRoomTable();


    //to populate the building option 
    function populateBuilding()
    {
        $.ajax("../api/adminapi/getBuildings")
        .done(function(result){
        //console.log(result);
        var template = document.querySelector("template#buildingOptionTemplate");
        var parent = document.querySelectorAll("#buildingSelect");
        
        for(i = 0; i < parent.length; i++){
          result.forEach(function (item){
            var cloned = template.content.cloneNode(true);
            cloned.querySelector("option").value = item.buildingId;
            cloned.querySelector("option").innerText= item.buildingName;

            parent[i].append(cloned);
          });
        }
        //to deselect a selected option
        $("select").val([]);
        });
    }

    //to populate the room table
    function populateRoomTable()
    {
        $('#roomData').DataTable().destroy();
        if(!$.fn.DataTable.isDataTable('#roomData'))
        {
            $('#roomData').DataTable({
                responsive: true,
                ajax:
                {
                    url: '../api/adminapi/getRoomAndBuilding',
                    dataSrc: ''
                },
                columns:
                [
                    {data: 'roomId'},
                    {data: 'roomName'},
                    {data: 'roomType'},
                    {data: 'roomCapacity'},
                    {data: 'buildingName'},
                    {   //actions
                        data: 'roomId',
                        render : function (data, type, row)
                        {
                            return btnRoom(data);
                        }
                    },
                ]
            });
        }
        //get the rooms list 
        getRoom();
    }

    //to render buttons in action index
    function btnRoom(roomId)
    {
        return "<center><a class='btn btn-success roomUpdate' data-roomId=" + roomId + "><i class='fa-solid fa-pen-to-square' style='color : #ffffff;'></i></a> | <a class='btn btn-danger roomDelete' data-roomId=" + roomId + "><i class='fa-solid fa-trash' style='color : #ffffff;'></i></a></center>"
    }

    //get the data of the room and store it to array
    function getRoom()
    {
        $.ajax("../api/adminapi/getRooms")
        .done(function(result){
            roomList = result;
        });
    }

    //this is to create a room and save it to the database
    $("#createRoom").click((e) => {
        var arrData = {};

        //count the number of element inside the form
        var formelements = $("#createRoomForm .form-group");

        //getting the data from the form
        var formInputs = $("#createRoomForm").serializeArray();
        formInputs.forEach(function(item){
            arrData[item.name] = item.value;
        });

        //for the input types because it doesn't read right
        let emptyEl = new Boolean(false);
        if(formInputs[1].value === '' || formInputs[2].value === '')
        {
            emptyEl = Boolean(true);
        }
        else
        {
            emptyEl = Boolean(false);
        }

        if(formInputs.length === formelements.length && emptyEl === Boolean(false))
        {
            //Call API to add Room
            $.ajax({
                url: "../api/adminapi/createRoom",
                type: "POST",
                data:
                {
                    rm : arrData,
                },
            })
            .done(function(){
                clearForm();
                $("#modalRoomCreate").modal("toggle");
                alertSuccess();
                populateRoomTable();
            });
        }else{
            alertError("Input the necessary elements!");
        }
    });


    //when clicking the delete button
    $("tbody").delegate(".roomDelete", "click", function(e){
        var i = e.target.closest("a").getAttribute("data-roomId");
        if(i != null)
        {
            //Insert code here for delete
            selectedRoomId = i;
            alertDeleteConfirmation(selectedRoomId);
        }
    });

    //after confirming delete, call this function
    function deleteRoom(selectedRoomId)
    {
        //AJAX delete room
        $.ajax({
            url: "../api/adminapi/deleteRoom",
            type: "POST",
            data:
            {
                roomId : selectedRoomId,
            },
        }).done(function(){
            alertSuccess();
            populateRoomTable();
        })
    }

    //when clicking the update button
    $("tbody").delegate(".roomUpdate", "click", function(e){
        var i = e.target.closest("a").getAttribute("data-roomId");
        if(i != null)
        {
            $("#createRoomForm")[0].reset();
            $("#modalRoomUpdate").modal("toggle");

            selectedRoomId = i;
            selectedRoom = roomList.find(element => element.roomId == i);

            oFormObject = document.forms["updateRoomForm"];
            initForm(oFormObject, selectedRoom);
        }
    });

    //to populate the selected element to the form
    function initForm(form, data){

        @* //get the select element by its id
        var select = document.getElementById("buildingSelect");

        //get the value to select
        var valueToSelect = data.buildingId;
        console.log(valueToSelect);

        //Use the loop
        console.log(select.options.length);
        for (var i = 0; i < select.options.length; i++) {
            if (select.options[i].value == valueToSelect) {
                console.log("I have a match");
                // Set the selectedIndex to the index of the matching option
                $("select").val(select.options[i].value);
                break; // Exit the loop once a match is found
            }
        } *@


        //for the select
        $("select").val(data.buildingId);

        //for the room name
        $('.inputRoomName').val(data.roomName);

        //for the room capacity
        $('.inputRoomCapacity').val(data.roomCapacity);

        //for the room type
        $('.roomTypeSelect').val(data.roomType);

        //for the radio button
        @* if(data.roomType == "Computer Laboratory")
        {
            $('.comLab').prop('checked', true);
            console.log("Computer Laboratory");
        }
        else if(data.roomType == "Lecture Room")
        {
            $('.lecRoom').prop('checked', true);
            console.log("Lecture Room");
        }
        else if(data.roomType == "Science Laboratory")
        {
            $('.sciLab').prop('checked', true);
            console.log("Science Laboratory");
        }
        else if(data.roomType == "Speech Laboratory")
        {
            $('.speechLab').prop('checked', true);
            console.log("Speech Laboratory");
        } *@


    }

    //when clicking update
    $("#updateRoom").click(function(){
        alertSaveChanges();
    });

    //after comfirming the update
    function proceedUpdate(){
        var arrData = {};

        //count the number of element inside the form
        var formelements = $("#updateRoomForm .form-group");

        //getting the data from the form
        var formInputs = $("#updateRoomForm").serializeArray();
        formInputs.forEach(function(item){
            arrData[item.name] = item.value;
        });

        arrData.roomId = selectedRoomId;

        //for the input types because it doesn't read right
        let emptyEl = new Boolean(false);
        if(formInputs[1].value === '' || formInputs[2].value === '')
        {
            emptyEl = Boolean(true);
        }
        else
        {
            emptyEl = Boolean(false);
        }

        if(formInputs.length === formelements.length && emptyEl === Boolean(false))
        {
            //Call API to update Room
            $.ajax({
                url: "../api/adminapi/updateRoom",
                type: "POST",
                data:
                {
                    rm : arrData,
                },
            })
            .done(function(){
                clearForm();
                $("#modalRoomUpdate").modal("toggle");
                alertSuccess();
                populateRoomTable();
            });
        }else{
            alertError("Input the necessary elements!");
        }
    }


    //sweet alert
    //display error alert
    function alertError(message)
    {
        Swal.fire({
            icon: 'error',
            title: 'Error occured',
            text: message,
        })
    }

    //display success action
    function alertSuccess()
    {
        Swal.fire({
            icon: 'success',
            title: 'Your work has been saved', 
            showConfirmButton: false,
            timer: 1500
        })
    }

    //display delete confirmation
    function alertDeleteConfirmation(selectedRoomId)
    {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes!'
        }).then((result) => {
            if(result.isConfirmed){
                deleteRoom(selectedRoomId);
            }
        })
    }

    //display update confirmation
    function alertSaveChanges()
    {
        Swal.fire({
            title: 'Do you want to save the changes?',
            showCancelButton: true,
            confirmButtonText: 'Save',
        }).then((result) => {
            if(result.isConfirmed){
                proceedUpdate();
            }
        })
    }


    //CLEAR UPON CLOSING
    $("#modalRoomCreateClose").click(function(){
        clearForm();
    });

    $("#modalRoomUpdateClose").click(function(){
        clearForm();
    });

    function clearForm(){
        $("#createRoomForm")[0].reset();
      //to deselect a selected option
        $("select").val([]);
    }
    
    }); //end of document.ready
</script>