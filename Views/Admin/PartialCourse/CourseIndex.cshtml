<center><h1>Program</h1></center>

<button type="button" id="createCoursebtn" title="Create Course" class="btn btn-success" style="color: #ffffff;" data-bs-toggle="modal" data-bs-target="#modalCourseCreate">
  <i class="fa-solid fa-circle-plus" style="color: #ffffff;"></i> &nbsp Create Program
</button>

<br><br>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <link rel="stylesheet" href="~/css/tableCss/tableStyle.css" asp-append-version="true"/>
</head>
<body>
  <!--Import partials and extensions here-->
  @Html.Partial("PartialCourse/CourseSidebar")
  @Html.Partial("PartialCourse/CourseTable")
  @Html.Partial("PartialCourse/CourseCreate")
  @Html.Partial("PartialCourse/CourseUpdate")
</body>
</html>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
//global variables in this section
var courseDepList = {};
var selectedCourse; 
var selectedCourseId;
var courseList = {};
var saveVal;

$(document).ready(function(){

  var storedUserAuth = sessionStorage.getItem('userauth');
  var userAuth = JSON.parse(storedUserAuth);

  if(userAuth === null)
  {
      window.location.href = "/Authorization/Signin";
  }
  else if(userAuth.userType !== 'admin')
  {
      if(userAuth.userType === 'instructor')
      {
          window.location.href = "/PageInstructor/PageInstructorIndex";
      }
      else if(userAuth.userType === 'student')
      {
          window.location.href = "/PageStudent/PageStudentIndex";
      }
  }

    //calling the functions
    populateDepartment();
    displayCourseData();
    getCourse();

    //This is used to populate the department select
    function populateDepartment()
    {
        $.ajax("../api/adminapi/getDepartment")
        .done(function(result){
        //console.log(result);
        var template = document.querySelector("template#departmentOptionTemplate");
        var parent = document.querySelectorAll("#departmentSelect");
        
        for(i = 0; i < parent.length; i++){
          result.forEach(function (item){
            //console.log(item.departmentName);
            var cloned = template.content.cloneNode(true);
            cloned.querySelector("option").value = item.departmentId;
            cloned.querySelector("option").innerText= item.departmentName;

            parent[i].prepend(cloned);
          });
        }
        //to deselect a selected option
        $("select").val([]);
        });
    }

    //Confirm add course btn
    $("#createCourse").click((e) => {
        var arrData = {};

        //count the number of element inside the form
        var formelements = $("#createCourseForm .form-group");

        //getting the data from the form
        var formInputs = $("#createCourseForm").serializeArray();
        formInputs.forEach(function(item){
            arrData[item.name] = item.value;
        });

        if(formInputs.length === formelements.length && formInputs[0].value !== '')
        {
            //if all elements are not empty
            //AJAX ADD COURSE
          $.ajax
          ({
            url: "../api/adminapi/createCourse",
            type: "POST",
            data:
            {
                cor : arrData,
            },
            })
            .done(function(result)
            {
              if(result === undefined)
                result = null;

              if(result.length <= 0 || result === null)
              {
                $("#createCourseForm")[0].reset();
                $("#modalCourseCreate").modal("toggle");
                displayCourseData();
                displaySavedProgress();
              }
              else
              {
                alertError("A program with the same name is already registered inside the selected department.");
              }
              
            });
        }else{
            alertError("Input the necessary elements");
        }
    });

    function displaySavedProgress()
    {
      Swal.fire({
      icon: 'success',
      title: 'Your work has been saved',
      showConfirmButton: false,
      timer: 1500
      })
    }

    function displayCourseData()
    {
        $('#courseData').DataTable().destroy();
        if (!$.fn.DataTable.isDataTable('#courseData')) {
        $('#courseData').DataTable({
            ajax: {
            url: '../api/adminapi/getCourseDep', // API endpoint to retrieve department
            dataSrc: ''
            },
            columns:
            [
            { data: 'courseId'},
            { data: 'courseName'},
            { data: 'departmentName'},
            { 
                data : 'courseId',
                render : function (data, type, row)
                {
                 return btnCourse(data);
                } 
            },
            ]
        });
    }
      getCourse();
      getCourseData();
    }

    //Get the list to array
    function getCourseData()
    {
      $.ajax("../api/adminapi/getCourse")
      .done(function(result){
        courseList = result;
      });
    }

    function btnCourse(courseId)
    {
        return "<center><a class='btn btn-success courseUpdate' data-courseId=" + courseId + "><i class='fa-solid fa-pen-to-square' style='color : #ffffff;'></i></a> | <a class='btn btn-danger courseDelete' data-courseId=" + courseId + "><i class='fa-solid fa-trash' style='color : #ffffff;'></i></a></center>"
    }

  $("tbody").delegate(".courseUpdate", "click", function(e)
  {
    var i = e.target.closest("a").getAttribute("data-courseId");
    if(i != null){
      $("#createCourseForm")[0].reset();
      $("#modalCourseUpdate").modal("toggle");

      selectedCourseId = i;
      selectedCourse = courseList.find(element => element.courseId == i);
      @* console.log(selectedCourse); *@

      oFormObject = document.forms["updateCourseForm"];
      @* console.log(oFormObject); *@
      initForm(oFormObject, selectedCourse);
    }
  });

  $("tbody").delegate(".courseDelete", "click", function(e){
    var i = e.target.closest("a").getAttribute("data-courseId");
    if(i != null){
      //Insert code here for the delete
      selectedCourseId = i;
      alertDeleteConfirmation();
    }
  });

  //get the course department list
  function getCourse(){
    $.ajax("../api/adminapi/getCourseDep")
    .done(function(result){
      courseDepList = result;
    });
  }

  function alertDeleteConfirmation()
  {
    Swal.fire({
      title: 'Are you sure?',
      text: "You won't be able to revert this!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
    if (result.isConfirmed) {
      proceedDelete();
    }
    })
  }

  function proceedDelete()
  {
    //AJAX DELETE Course
    $.ajax
      ({
        url: "../api/adminapi/deleteCourse",
        type: "POST",
        data:
        {
          courseId : selectedCourseId
        },
        })
        .done(function()
        {
          alertDeleteInfo();
          displayCourseData();
        });
  }

  function alertDeleteInfo()
  {
    Swal.fire(
      'Deleted!',
      'Your file has been deleted.',
      'success'
      )
  }

  function initForm(form, data){

    Object.getOwnPropertyNames(data).forEach(function(item){
    //console.log(form.elements[item.charAt(0).toUpperCase() + item.slice(1)]);
    var currentElem = form.elements[item.charAt(0).toUpperCase() + item.slice(1)];

    if( currentElem == null ){return;}

    if(currentElem.tagName == "SELECT"){
      var selectChildren = Array.from(currentElem.children);
      var matchedOpt = selectChildren.find(opt => opt.value == selectedCourse.departmentId);
      if(matchedOpt){
        matchedOpt.selected = true;
      }
      }else{
        form.elements[item.charAt(0).toUpperCase() + item.slice(1)].setAttribute("value",data[item]); 
      }
    });
    //$("select").val([]);
    @* populateDepartment();
    getCourse(); *@
  }

  //update click course
  $("#updateCourse").click(function(){
    alertSaveChanges();
  });


  function alertSaveChanges()
  {
    Swal.fire({
      title: 'Do you want to save the changes?',
      showCancelButton: true,
      confirmButtonText: 'Save',
    }).then((result) => {
      /* Read more about isConfirmed, isDenied below */
    if (result.isConfirmed) {
      proceedUpdate();
    }
    })
  }

  function alertError(message)
    {
        Swal.fire({
            icon: 'error',
            title: 'Error occured',
            text: message,
        })
    }

  function proceedUpdate()
  {
    var arrData = {};

    //count the number of element inside the form
    var formelements = $("#updateCourseForm .form-group");

    //getting the data from the form
    var formInputs = $("#updateCourseForm").serializeArray();
    formInputs.forEach(function(item){
      arrData[item.name] = item.value;
    });

    arrData.courseId = selectedCourseId;

    if(formInputs.length === formelements.length && formInputs[0].value !== '')
    {
      //AJAX UPDATE DEPARTMENT
      $.ajax
      ({
        url: "../api/adminapi/updateCourse",
        type: "POST",
        data:
        {
            cor : arrData
        },
      })
      .done(function()
      {
        //document.querySelector(".parent").innerHTML = "";
        $("#updateCourseForm")[0].reset();
        $("#modalCourseUpdate").modal("toggle");
        displayCourseData();
        displaySavedProgress();
        $("select").val([]);
      });
    }
  }

  //upon closing the modal create
  $("#modalCourseCreateClose").click(function(){
    defaultClear();
  });

  //upon opening of create modal
  $("#createCoursebtn").click((e) => {
    defaultClear();
  });

  function defaultClear()
  {
    $("#createCourseForm")[0].reset();
    $("#updateCourseForm")[0].reset();
    $("select").val([]);
  }

//don't touch this
});
</script>